Zadanie 2.2.3

int dziel(int n)
{

    for(int k = n-1; k>=0; k--)
    {

        if(n%k==0)
        {
            return k;

        }
    }
    return 0;
}

int main ()
{
int n;
scanf("%d",&n);
printf("%d\n,dziel(n));

return 0;
}

Zadanie 2.2.4

#include<math.h>

int pot(int n)
{

    for(int i = 0; i<=n; i++)
    {
        return pow(n,2);
    }
    return 0;
}

int main()
{
unsigned int n;
scanf("%d",&n);
printf("%d\n,pot(n));

return 0;
}


Zadanie 2.2.5 

#include<math.h>

int pownieujemna(int n)
{
    for(int i; i<=n;i++)
    {


        return pow(n,2);

    }
    return 0;

}

int main()
{
int n;
scanf("%d",&n);
if(n<0)
  n = n*(-1);
printf("%d\n,pot(n));

return 0;

}

Zadanie 2.2.6

#include<math.h>

int nm(int n, int m)
{
    for(int i = 0; i<=m;i++)
    {
        return pow(n,m);
    }
    return 0;
}

int main()
{
   unsigned int n;
   unsigned int m;
    scanf("%d%d",&n,&m);
    if(n != 0 || m !=0)
        printf("%d",nm(n,m));

    return 0;
}


Zadanie 2.2.7

double nm(int n, int m)
{
   if(n==0)
    return 0;
   int wynik =1;

   for(int i =0;i<(m<0?-m:m);i++)
    wynik*=n;
   if(m<0)
    return 1.0/wynik;
   else
    return wynik;
}


int main()
{
    int n;
    int m;
    scanf("%d%d",&n,&m);
    if(n == 0 || m ==0)
        return 1;
    printf("%f", nm(n,m));


    return 0;
}


Zadanie 2.2.8

int pierw(int x)
{


    float sqrt = x / 2;
    float temp = 0;
          while(sqrt != temp)
    {
       temp = sqrt;
       printf("temp %f =\n", temp);
       sqrt = ( x/temp + temp) / 2;
       printf("sqrt = %f\n", sqrt);
    }
    return (int)sqrt;


}

int main()
{
    int x;
    scanf("%d", &x);
    printf("Wynik rowny = %d", pierw(x));
}



Zadanie 2.2.11

int sumapierwiastek(int n)
{
    int suma = 0;
    for(int i = 0; i<=n ; i++)
    {


        suma+=(int)sqrt(i);
    }


return suma;
}

int main()
{
    int n;
    scanf("%d", &n);
    printf("%d", sumapierwiastek(n));
}




int main()
{
    unsigned int n;
    scanf("%d",&n);
    printf("%d", hop(n));
}


Zadanie 2.2.12





